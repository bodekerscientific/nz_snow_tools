"""
code to plot maps of snow covered area for individual years from summary lists generated by catchment_evalutation.py
"""

from __future__ import division

import numpy as np
import pickle
import matplotlib.pylab as plt

average_scd = False  # boolean specifying if all years are to be averaged together - now plots difference between
which_model = 'dsc_snow'  # string identifying the model to be run. options include 'clark2009', 'dsc_snow', or 'all' # future will include 'fsm'
catchment = 'Clutha'
output_dem = 'nztm250m'  # identifier for output dem
years_to_take = range(2000, 2016 + 1)  # [2013 + 1]  # range(2001, 2013 + 1)
modis_sc_threshold = 50  # value of fsca (in percent) that is counted as being snow covered
model_swe_sc_threshold = 5  # threshold for treating a grid cell as snow covered
model_output_folder = 'P:/Projects/DSC-Snow/runs/output/clutha_nztm250m_erebus'
plot_folder = 'P:/Projects/DSC-Snow/runs/output/clutha_nztm250m_erebus'

# run_id = 'jobst_ucc_4'  # string identifying fortran dsc_snow run. everything after the year
run_ids = ['jobst_ucc_4','vcsn_4'] #,'norton_4'

for run_id in run_ids:
    ann = pickle.load(open(model_output_folder + '/summary_{}_{}_thres{}_swe{}_{}_{}.pkl'.format(catchment, output_dem, modis_sc_threshold, model_swe_sc_threshold,
                                                                                                 which_model, run_id), 'rb'))
    # indexes 0-3 modis, 4-8 model 1 and 9-13 model 2
    # ann = [ann_ts_av_sca_m, ann_hydro_days_m, ann_dt_m, ann_scd_m,
    # ann_ts_av_sca, ann_ts_av_swe, ann_hydro_days, ann_dt, ann_scd,
    # ann_ts_av_sca2, ann_ts_av_swe2, ann_hydro_days2, ann_dt2, ann_scd2]

    ann_scd_m = np.asarray(ann[3], dtype=np.double)
    ann_scd = np.asarray(ann[8], dtype=np.double)

    ann_scd_m[(ann_scd_m <= -1)] = np.nan  # set areas outside of catchment and in water to nan
    ann_scd[(ann_scd == -999)] = np.nan
    ann_scd[(ann_scd_m == -1)] = np.nan

    fig1 = plt.figure(figsize=[10, 4])


    # if average_scd == True:
    modis_scd = np.mean(ann_scd_m, axis=0)
    mod1_scd = np.mean(ann_scd, axis=0)

    plt.subplot(1, 3, 1)
    cmap = plt.cm.viridis
    cmap.set_bad('0.5')
    plt.imshow(modis_scd, origin=0, interpolation='none', vmin=0, vmax=365)
    plt.colorbar()
    plt.title('modis duration fsca > {}'.format(modis_sc_threshold))

    plt.subplot(1, 3, 2)
    plt.imshow(mod1_scd, origin=0, interpolation='none', vmin=0, vmax=365)
    plt.colorbar()
    plt.title('dsc_snow SWE thres= {}'.format(model_swe_sc_threshold))

    plt.subplot(1, 3, 3)
    plt2 = mod1_scd - modis_scd
    # plt2[(plt2 > 100)] = 0  # some bad model points
    cmap = plt.cm.RdBu
    cmap.set_bad('0.5')
    plt.imshow(plt2, origin=0, interpolation='none', vmin=-100, vmax=100,cmap=cmap)  # , vmin=0, vmax=365, cmap='viridis')
    plt.colorbar()
    plt.title('difference (days)')

    plt.tight_layout()
    plt.savefig(plot_folder + '/SCD{}to{}_{}_{}_thres{}_swe{}_{}_{}.png'.format(years_to_take[0], years_to_take[-1], catchment, output_dem, modis_sc_threshold,
                                                                                model_swe_sc_threshold, which_model, run_id), dpi=300)
    plt.close()
    # else:
    for i, year_to_take in enumerate(years_to_take):
        modis_scd = ann_scd_m[i]
        mod1_scd = ann_scd[i]

        plt.subplot(1, 3, 1)
        cmap = plt.cm.viridis
        cmap.set_bad('0.5')
        plt.imshow(modis_scd, origin=0, interpolation='none', vmin=0, vmax=365)
        plt.colorbar()
        plt.title('modis duration fsca > {}'.format(modis_sc_threshold))

        plt.subplot(1, 3, 2)
        plt.imshow(mod1_scd, origin=0, interpolation='none', vmin=0, vmax=365)
        plt.colorbar()
        plt.title('dsc_snow SWE thres= {}'.format(model_swe_sc_threshold))

        plt.subplot(1, 3, 3)
        plt2 = mod1_scd - modis_scd
        # plt2[(plt2 > 100)] = 0  # some bad model points
        cmap = plt.cm.RdBu
        cmap.set_bad('0.5')
        plt.imshow(plt2, origin=0, interpolation='none', vmin=-100, vmax=100, cmap=cmap)  # , vmin=0, vmax=365, cmap='viridis')
        plt.colorbar()
        plt.title('difference (days)')

        plt.tight_layout()
        plt.savefig(plot_folder + '/SCD{}_{}_{}_thres{}_swe{}_{}_{}.png'.format(year_to_take, catchment, output_dem, modis_sc_threshold, model_swe_sc_threshold,
                                                                                which_model, run_id), dpi=300)
        plt.close()
